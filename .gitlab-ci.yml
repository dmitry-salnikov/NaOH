types:
  - test
  - package

before_script: 
    - git submodule update --init --recursive

variables:
  XCSBOT: "fc03b092ecd597b3488984a34d029eec"
  XCSBOT_IOS: "8398cace692793b0b9d5ab1fe0964301"

  docker_tag: "naoh"
  cli_executable: "NaOH"

  GITLAB_PROJECT_ID: "9"
  FRAMEWORK_NAME: "NaOH"

testMac:
  type: test
  script:
    - xcodebuild -scheme NaOH clean test
  tags:
    - xc7

testiOSSim64:
  type: test
  script:
    - xcodebuild -scheme NaOHiOSTestHostApp -configuration Debug -destination "platform=iOS Simulator,name=iPhone 6" clean test
  tags:
    - xc7

testiOSSim64:
  type: test
  script:
    - xcodebuild -scheme NaOHiOSTestHostApp -configuration Debug -destination "platform=iOS Simulator,name=iPhone 4s" clean test
  tags:
    - xc7

iosDeviceTest:
  type: test
  script:
    - xcodebuild -scheme NaOHiOSTestHostApp -configuration Debug -destination "platform=iOS,name=Dca's iPod touch" clean test
  tags:
    - xc7
    - iosDevice

archiveiOS:
   type: package
   script:
      - carthage build --no-skip-current --platform ios
      - mkdir binaries
      - cp -R Carthage/Build/iOS/* binaries/
      - strip -S -x binaries/NaOH.framework/NaOH
      - plutil -replace CFBundleVersion -string "$CI_BUILD_ID" binaries/NaOH.framework/Info.plist
   tags:
    - xc7

   artifacts:
      paths:
      - binaries/
      name: "NaOH-iOS-${CI_BUILD_REF_NAME}-${CI_BUILD_ID}"


archiveMac:
   type: package
   script:
      - "carthage build --no-skip-current --platform osx"
      - mkdir binaries
      - cp -R Carthage/Build/Mac/* binaries/
      - strip -S -x binaries/NaOH.framework/NaOH 
      - plutil -replace CFBundleVersion -string "$CI_BUILD_ID" binaries/NaOH.framework/Versions/A/Resources/Info.plist

   artifacts:
      paths:
      - binaries
      name: "NaOH-OSX-${CI_BUILD_REF_NAME}-${CI_BUILD_ID}"

   tags:
    - xc7

atbuildMac:
  type: test
  script:
    - atbuild check --use-overlay osx

  tags:
    - osx
    - atbuild
    - openswift

  artifacts:
    paths:
      - bin/NaOH.a
      - bin/NaOH.swiftmodule

linux:
  type: test
  script:
        - echo $docker_tag "docker_tag"
        - docker build -t $docker_tag .
        - id=$(docker create $docker_tag)
        - mkdir bin
        - docker cp $id:/NaOH/bin/${cli_executable}.swiftmodule bin/$cli_executable
        - docker cp $id:/NaOH/bin/${cli_executable}.a bin/${cli_executable}.a
        - docker rm -v $id
        - docker rmi $docker_tag
  artifacts: 
    paths:
        - bin/

  tags:
  - docker
